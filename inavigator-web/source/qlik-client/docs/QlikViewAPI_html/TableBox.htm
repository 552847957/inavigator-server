<html>
<head><title>TableBox</title></head>
<script src="./scripts.js"></script>
<script>        document.addEventListener("DOMContentLoaded", methodsList);    </script>
<body><div id="navigation"></div>
<h1>TableBox</h1><br/>
The QlikView table box, a superset of the QlikView sheet object<br/><br/><br/>
<table width="100%" border="1" cellpadding="3" cellspacing="0">
    <tbody>
    <tr class="TableHeadingColor" bgcolor="#ccccff">
        <td colspan="1"><font size="+2"><b>Method Detail</b></font></td>
    </tr>
    </tbody>
</table>
<h3>Activate</h3>
<pre> <b>Activate</b>()</pre>
<dl>
    <dd>Makes the sheet object the active sheet object. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>ActivateAlso</h3>
<pre> <b>ActivateAlso</b>()</pre>
<dl>
    <dd>Adds the sheet object to the active sheet objects. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>AddField</h3>
<pre>Integer <b>AddField</b>(String Name)</pre>
<dl>
    <dd>Adds a field to the table box. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Name</code></b> (String) : Field name</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>New field's column number (0 based) returned</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>5.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;TB&nbsp;=&nbsp;ActiveDocument.Sheets("Products").CreateTableBox<br/>TB.AddField&nbsp;"ProductType"<br/>TB.AddField&nbsp;"Product"<br/><br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>AppendExport</h3>
<pre> <b>AppendExport</b>(String Path, String Separator, Integer CodePage)</pre>
<dl>
    <dd>Exports the sheet object by appending to an existing file (QV5 compatibility). Export should be used instead!
        <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Path</code></b> (String) : File name with path</dd>
            <dd><b><code>Separator</code></b> (String) : Separator to be used between values in record</dd>
            <dd><b><code>CodePage</code></b> (Integer) : Codepage number, e.g. :<br/>0 = current ANSI<br/>1200 = Unicode<br/>65001
                = UTF-8
            </dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.GetSheetObject("TB01")<br/>tb.AppendExport&nbsp;"C:\test.skv",";"<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>ApplyTheme</h3>
<pre> <b>ApplyTheme</b>(String FileName)</pre>
<dl>
    <dd>Returns sheet object caption. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>FileName</code></b> (String) : Theme file name with path</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>CanPrint</h3>
<pre>Boolean <b>CanPrint</b>()</pre>
<dl>
    <dd>Returns true if sheet object is printable. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>ClearMemberFields</h3>
<pre>Boolean <b>ClearMemberFields</b>(Boolean SoftLock)</pre>
<dl>
    <dd>Clears all fields in multi box. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>SoftLock</code></b> (Boolean) : Currently not in use</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>ActiveDocument.GetSheetObject("TB01").ClearMemberFields<br/></code></i></dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>Close</h3>
<pre> <b>Close</b>()</pre>
<dl>
    <dd>Removes the sheet object. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>CopyBitmapToClipboard</h3>
<pre>Boolean <b>CopyBitmapToClipboard</b>()</pre>
<dl>
    <dd>Copies a bitmap image of the sheet object to the clipboard. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>CopyTableToClipboard</h3>
<pre>Boolean <b>CopyTableToClipboard</b>(Boolean IncludeLabels)</pre>
<dl>
    <dd>Copies the cells of a table to clipboard (table objects only). <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>IncludeLabels</code></b> (Boolean) : True if labels are to be included</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>True if operation was successful</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>CopyTextToClipboard</h3>
<pre>Boolean <b>CopyTextToClipboard</b>()</pre>
<dl>
    <dd>Irrelevant for this type of sheet object. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>5.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>CopyValuesToClipboard</h3>
<pre>Boolean <b>CopyValuesToClipboard</b>()</pre>
<dl>
    <dd>Copies the values of a chart object to clipboard (not available for pivot tables). <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>DbGetTableData</h3>
<pre><a href="Ireturn%20object%20for%20SheetObject.DbGetTableData()%20and%20CustomDropDown.DbGetTableData()%20and%20GraphBasics.D....htm">Ireturn object for SheetObject.DbGetTableData() and CustomDropDown.DbGetTableData() and GraphBasics.D...</a> <b>DbGetTableData</b>(Variant (Array of Integer) Columns, Variant (Array of Boolean) ForceText, Integer StartRow, Integer NoOfRows)</pre>
<dl>
    <dd>Returns data from table for QV ODBC driver. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Columns</code></b> (Variant (Array of Integer)) : Array of column numbers to extract (0 based)
            </dd>
            <dd><b><code>ForceText</code></b> (Variant (Array of Boolean)) : Not implemented</dd>
            <dd><b><code>StartRow</code></b> (Integer) : First row to extract</dd>
            <dd><b><code>NoOfRows</code></b> (Integer) : Number of rows to extract</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>Returns data from table for QV ODBC driver</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>DbGetTableInfo</h3>
<pre><a href="Ireturn%20object%20for%20SheetObject.DbGetTableInfo()%20and%20CustomDropDown.DbGetTableInfo()%20and%20GraphBasics.D....htm">Ireturn object for SheetObject.DbGetTableInfo() and CustomDropDown.DbGetTableInfo() and GraphBasics.D...</a> <b>DbGetTableInfo</b>()</pre>
<dl>
    <dd>Returns information about fields in table for QV ODBC driver. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>DbIsTable</h3>
<pre>Boolean <b>DbIsTable</b>()</pre>
<dl>
    <dd>Returns true if the object is a table box, straight table or bitmap chart (and thus can deliver data to QV ODBC
        driver). <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>Deactivate</h3>
<pre> <b>Deactivate</b>()</pre>
<dl>
    <dd>Removes the sheet object from the list of active sheet objects. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>DialogPrint</h3>
<pre>Boolean <b>DialogPrint</b>()</pre>
<dl>
    <dd>Opens the Print dialog for the sheet object. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>7.00</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>DialogProperties</h3>
<pre>Boolean <b>DialogProperties</b>(Integer Page)</pre>
<dl>
    <dd>Opens sheet object properties dialog. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Page</code></b> (Integer) : Property dialog page (0 based). -1 opens on last used page.</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>5.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>EqualPixWidth</h3>
<pre> <b>EqualPixWidth</b>(Integer RulingColumn)</pre>
<dl>
    <dd>Sets the pixel width of all columns equal to that of a specified column. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>RulingColumn</code></b> (Integer) : Column number (0 based)</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>dim&nbsp;w(1)<br/>w(1)=150<br/>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.Sheets("Main").CreateTableBox<br/>tb.AddField&nbsp;"Class"<br/>tb.AddField&nbsp;"Member"<br/>tb.AddField&nbsp;"MemberComment"<br/>tb.SetPixWidths&nbsp;0,w<br/>tb.EqualPixWidth&nbsp;0<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>Export</h3>
<pre> <b>Export</b>(String Path, String Separator, Integer CodePage, Boolean Append)</pre>
<dl>
    <dd>Exports the table box to a file. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Path</code></b> (String) : File name with path</dd>
            <dd><b><code>Separator</code></b> (String) : Separator to be used between values in record</dd>
            <dd><b><code>CodePage</code></b> (Integer) : Codepage number, e.g. :<br/>0 = current ANSI<br/>1200 = Unicode<br/>65001
                = UTF-8
            </dd>
            <dd><b><code>Append</code></b> (Boolean) : True if export to be appended to existing file</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.Sheets("Main").CreateTableBox<br/>tb.AddField&nbsp;"Class"<br/>tb.AddField&nbsp;"Member"<br/>tb.Export&nbsp;"C:\test.skv",";"<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>ExportBiff</h3>
<pre> <b>ExportBiff</b>(String Path)</pre>
<dl>
    <dd>Exports sheet object in BIFF (Excel) format. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Path</code></b> (String) : File name with path</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;obj&nbsp;=&nbsp;ActiveDocument.GetSheetObject("TB01")<br/>obj.ExportBiff&nbsp;"C:\test.xls"<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>ExportBitmapToFile</h3>
<pre>Boolean <b>ExportBitmapToFile</b>(String Filename)</pre>
<dl>
    <dd>Exports a bitmap image of the sheet object to a file. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Filename</code></b> (String) : File name with path</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>Returns true if export succeeded</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>ExportHtml</h3>
<pre> <b>ExportHtml</b>(String Path)</pre>
<dl>
    <dd>Exports table box to file in HTML format. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Path</code></b> (String) : File name with path</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.Sheets("Main").CreateTableBox<br/>tb.AddField&nbsp;"Class"<br/>tb.AddField&nbsp;"Member"<br/>tb.ExportHtml&nbsp;"C:\test.htm"<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>ExportXml</h3>
<pre>Integer <b>ExportXml</b>(String Path, Integer CodePage)</pre>
<dl>
    <dd>Exports table box to file in XML format. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Path</code></b> (String) : File name with path</dd>
            <dd><b><code>CodePage</code></b> (Integer) : Codepage number, e.g. :<br/>0 = current ANSI<br/>1200 = Unicode<br/>65001
                = UTF-8
            </dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>Error code<br/>0 = Operation succeeded<br/>-2 = Could not find ISO name of specified codepage <br/>-1 =
                The specified codpage is not supported by the system
            </dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>5.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.Sheets("Main").CreateTableBox<br/>tb.AddField&nbsp;"Class"<br/>tb.AddField&nbsp;"Member"<br/>tb.ExportXml&nbsp;"C:\test.xml",1200<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetCalculationLimits</h3>
<pre>ICalculationLimits <b>GetCalculationLimits</b>()</pre>
<dl>
    <dd>Returns information about the object's calculation memory limits. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>rem&nbsp;**&nbsp;create&nbsp;table&nbsp;box&nbsp;and&nbsp;double&nbsp;memory&nbsp;limit&nbsp;**<br/>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.Sheets("Main").CreateTableBox<br/>tb.AddField&nbsp;"Class"<br/>tb.AddField&nbsp;"Member"<br/>set&nbsp;cl&nbsp;=&nbsp;tb.GetCalculationLimits<br/>cl.MemoryLimit&nbsp;=&nbsp;cl.MemoryLimit&nbsp;*&nbsp;2<br/>tb.SetCalculationLimits&nbsp;cl<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetCaption</h3>
<pre><a href="ICaption.htm">ICaption</a> <b>GetCaption</b>()</pre>
<dl>
    <dd>Apply theme to sheet object. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetCell</h3>
<pre><a href="IRCCell.htm">IRCCell</a> <b>GetCell</b>(Integer Row, Integer Column)</pre>
<dl>
    <dd>Returns a sheet object cell by its x/y coordinates in the current state of the layout. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Row</code></b> (Integer) : Sheet object row (0 based)</dd>
            <dd><b><code>Column</code></b> (Integer) : Sheet object column (0 based)</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>Cell content object returned</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;TableBox&nbsp;=&nbsp;ActiveDocument.GetSheetObject(&nbsp;"TB01"&nbsp;)<br/>for&nbsp;RowIter&nbsp;=&nbsp;0&nbsp;to&nbsp;TableBox.GetRowCount-1<br/>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;ColIter&nbsp;=0&nbsp;to&nbsp;TableBox.GetColumnCount-1<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;cell&nbsp;=&nbsp;TableBox.GetCell(RowIter,ColIter)<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msgbox(cell.Text)<br/>&nbsp;&nbsp;&nbsp;&nbsp;next<br/>next<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetCells</h3>
<pre><a href="IArrayOfArrayOfRCCell.htm">IArrayOfArrayOfRCCell</a> <b>GetCells</b>(IRect Rect)</pre>
<dl>
    <dd>Returns a set of sheet object cells in the current state of the layout. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Rect</code></b> (<a href="IRect.htm">IRect</a>) : Rectangle describing which cells to return
            </dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>Array of cell content objects returned</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;TableBox&nbsp;=&nbsp;ActiveDocument.GetSheetObject(&nbsp;"TB01"&nbsp;)<br/>CellRect&nbsp;=&nbsp;ActiveDocument.GetApplication().GetEmptyRect()<br/>CellRect.Top&nbsp;=&nbsp;0<br/>CellRect.Left&nbsp;=&nbsp;0<br/>CellRect.Width&nbsp;=&nbsp;TableBox.GetColumnCount<br/>CellRect.Height&nbsp;=&nbsp;TableBox.GetRowCount<br/>set&nbsp;CellMatrix&nbsp;=&nbsp;TableBox.GetCells(&nbsp;CellRect&nbsp;)<br/>for&nbsp;RowIter=CellRect.Top&nbsp;to&nbsp;CellRect.Height-1<br/>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;ColIter=CellRect.Left&nbsp;to&nbsp;CellRect.Width-1<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msgbox(CellMatrix(RowIter)(ColIter).Text)<br/>&nbsp;&nbsp;&nbsp;&nbsp;next<br/>next</code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetCells2</h3>
<pre><a href="IArrayOfArrayOfRCCell.htm">IArrayOfArrayOfRCCell</a> <b>GetCells2</b>(Integer Left, Integer Top, Integer Width, Integer Height)</pre>
<dl>
    <dd>Returns a set of sheet object cells in the current state of the layout. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Left</code></b> (Integer) : left position of index of base cell (0 based)</dd>
            <dd><b><code>Top</code></b> (Integer) : Top position of index of base cell (0 based)</dd>
            <dd><b><code>Width</code></b> (Integer) : Number of cells in horizontal direction</dd>
            <dd><b><code>Height</code></b> (Integer) : Number of cells in vertical direction</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>Array of cell content objects returned</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;table&nbsp;=&nbsp;ActiveDocument.GetSheetObject(&nbsp;"TB01"&nbsp;)<br/>w&nbsp;=&nbsp;table.GetColumnCount<br/>h&nbsp;=&nbsp;table.GetRowCount<br/>set&nbsp;CellMatrix&nbsp;=&nbsp;table.GetCells2(0,0,w,h)<br/>for&nbsp;RowIter=0&nbsp;to&nbsp;h-1<br/>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;ColIter=0&nbsp;to&nbsp;w-1<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msgbox(CellMatrix(RowIter)(ColIter).Text)<br/>&nbsp;&nbsp;&nbsp;&nbsp;next<br/>next<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetColumnCount</h3>
<pre>Integer <b>GetColumnCount</b>()</pre>
<dl>
    <dd>Returns number of sheet object columns in the current state of the layout. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;TableBox&nbsp;=&nbsp;ActiveDocument.GetSheetObject(&nbsp;"TB01"&nbsp;)<br/>CellRect&nbsp;=&nbsp;ActiveDocument.GetApplication().GetEmptyRect()<br/>CellRect.Top&nbsp;=&nbsp;0<br/>CellRect.Left&nbsp;=&nbsp;0<br/>CellRect.Width&nbsp;=&nbsp;TableBox.GetColumnCount<br/>CellRect.Height&nbsp;=&nbsp;TableBox.GetRowCount<br/>set&nbsp;CellMatrix&nbsp;=&nbsp;TableBox.GetCells(&nbsp;CellRect&nbsp;)<br/>for&nbsp;RowIter=CellRect.Top&nbsp;to&nbsp;CellRect.Height-1<br/>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;ColIter=CellRect.Left&nbsp;to&nbsp;CellRect.Width-1<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msgbox(CellMatrix(RowIter)(ColIter).Text)<br/>&nbsp;&nbsp;&nbsp;&nbsp;next<br/>next<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetDoc</h3>
<pre><a href="Document.htm">Document</a> <b>GetDoc</b>()</pre>
<dl>
    <dd>Returns the document. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetField</h3>
<pre><a href="Field.htm">Field</a> <b>GetField</b>(Integer Col)</pre>
<dl>
    <dd>Returns the field from a specified column in the table box. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Col</code></b> (Integer) : Column number (0 based)</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>Object of class Field returned</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>rem&nbsp;**&nbsp;display&nbsp;name&nbsp;of&nbsp;first&nbsp;field&nbsp;in&nbsp;table&nbsp;box&nbsp;TB01&nbsp;**<br/>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.GetSheetObject("TB01")<br/>set&nbsp;fld&nbsp;=&nbsp;tb.GetField(0)<br/>msgbox(fld.Name)<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetFrameDef</h3>
<pre><a href="IFrame.htm">IFrame</a> <b>GetFrameDef</b>()</pre>
<dl>
    <dd>Returns frame, border and caption settings for the sheet object with position rectangles in docunits. Replaces
        GetFrame from QV5<p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetNoOfRows</h3>
<pre>Integer <b>GetNoOfRows</b>()</pre>
<dl>
    <dd>Returns the number of rows in the table box. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.Sheets("Main").CreateTableBox<br/>tb.AddField&nbsp;"Class"<br/>tb.AddField&nbsp;"Member"<br/>msgbox("number&nbsp;of&nbsp;class&nbsp;members&nbsp;=&nbsp;"&tb.GetNoOfRows)<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetObjectCalcTime</h3>
<pre>Integer <b>GetObjectCalcTime</b>()</pre>
<dl>
    <dd>Returns latest object calculation time. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetObjectId</h3>
<pre>String <b>GetObjectId</b>()</pre>
<dl>
    <dd>Returns th e unique ID for the sheet object. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetObjectMemoryUsage</h3>
<pre>Integer <b>GetObjectMemoryUsage</b>()</pre>
<dl>
    <dd>Returns latest object calculation memory usage. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetObjectType</h3>
<pre>short <b>GetObjectType</b>()</pre>
<dl>
    <dd>Returns code for sheet object type. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>5.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetPrintOptions</h3>
<pre><a href="IPrinterOptions.htm">IPrinterOptions</a> <b>GetPrintOptions</b>()</pre>
<dl>
    <dd>Returns printer settings for the sheet object. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetProperties</h3>
<pre><a href="ITableBoxProperties.htm">ITableBoxProperties</a> <b>GetProperties</b>()</pre>
<dl>
    <dd>Returns the table box properties. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>rem&nbsp;**&nbsp;create&nbsp;table&nbsp;box&nbsp;and&nbsp;name&nbsp;MyTable&nbsp;**<br/>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.Sheets("Main").CreateTableBox<br/>tb.AddField&nbsp;"Class"<br/>tb.AddField&nbsp;"Member"<br/>set&nbsp;tp&nbsp;=&nbsp;tb.GetProperties<br/>tp.Layout.Frame.Name.v&nbsp;=&nbsp;"MyTable"<br/>tb.SetProperties&nbsp;tp<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetRect</h3>
<pre><a href="IRect.htm">IRect</a> <b>GetRect</b>()</pre>
<dl>
    <dd>Returns sheet object position/size rectangle (pixels). <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>7.00</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetRelevantSelections</h3>
<pre>Variant (Array of String) <b>GetRelevantSelections</b>()</pre>
<dl>
    <dd>Returns the current selections relevant for the object. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetReplacementObject</h3>
<pre>LPDISPATCH <b>GetReplacementObject</b>()</pre>
<dl>
    <dd>Returns pointer to OCX replacement object. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>5.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetRowCount</h3>
<pre>Integer <b>GetRowCount</b>()</pre>
<dl>
    <dd>Returns number of sheet object rows in the current state of the layout. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;TableBox&nbsp;=&nbsp;ActiveDocument.GetSheetObject(&nbsp;"TB01"&nbsp;)<br/>CellRect&nbsp;=&nbsp;ActiveDocument.GetApplication().GetEmptyRect()<br/>CellRect.Top&nbsp;=&nbsp;0<br/>CellRect.Left&nbsp;=&nbsp;0<br/>CellRect.Width&nbsp;=&nbsp;TableBox.GetColumnCount<br/>CellRect.Height&nbsp;=&nbsp;TableBox.GetRowCount<br/>set&nbsp;CellMatrix&nbsp;=&nbsp;TableBox.GetCells(&nbsp;CellRect&nbsp;)<br/>for&nbsp;RowIter=CellRect.Top&nbsp;to&nbsp;CellRect.Height-1<br/>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;ColIter=CellRect.Left&nbsp;to&nbsp;CellRect.Width-1<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msgbox(CellMatrix(RowIter)(ColIter).Text)<br/>&nbsp;&nbsp;&nbsp;&nbsp;next<br/>next<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetSheet</h3>
<pre><a href="Sheet.htm">Sheet</a> <b>GetSheet</b>()</pre>
<dl>
    <dd>Returns the sheet where the sheet object resides. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetStatus</h3>
<pre>Integer <b>GetStatus</b>()</pre>
<dl>
    <dd>Returns sheet object state. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetTableAsText</h3>
<pre>String <b>GetTableAsText</b>(Boolean IncludeLabels)</pre>
<dl>
    <dd>Returns table data as text for table box. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>IncludeLabels</code></b> (Boolean) : True if labels are to be included</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>Table as text</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>5.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetTableInfo</h3>
<pre><a href="IRCTableInfo.htm">IRCTableInfo</a> <b>GetTableInfo</b>()</pre>
<dl>
    <dd>Returns table formatting information. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;table&nbsp;=&nbsp;ActiveDocument.GetSheetObject(&nbsp;"TB01"&nbsp;)<br/>set&nbsp;ti&nbsp;=&nbsp;table.getTableInfo<br/>font&nbsp;=&nbsp;ti.DefaultFont<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>GetZedLevel</h3>
<pre>Integer <b>GetZedLevel</b>()</pre>
<dl>
    <dd>Returns z layer for sheet object. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>IsActive</h3>
<pre>Boolean <b>IsActive</b>()</pre>
<dl>
    <dd>Returns true if the sheet object is active. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>IsMaximized</h3>
<pre>Boolean <b>IsMaximized</b>()</pre>
<dl>
    <dd>Returns true if sheet object is maximized. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>IsMinimized</h3>
<pre>Boolean <b>IsMinimized</b>()</pre>
<dl>
    <dd>Returns true if the sheet object is minimized. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>Maximize</h3>
<pre> <b>Maximize</b>()</pre>
<dl>
    <dd>Maximizes sheet object. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>Minimize</h3>
<pre> <b>Minimize</b>()</pre>
<dl>
    <dd>Minimizes the sheet object as an icon if minimizable. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>MoveToSheet</h3>
<pre>Boolean <b>MoveToSheet</b>(String SheetId)</pre>
<dl>
    <dd>Moves the sheet object to a specified sheet. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>SheetId</code></b> (String) : Sheet ID of target sheet</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>True if operation succeeded</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>7.00</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>Print</h3>
<pre>Boolean <b>Print</b>()</pre>
<dl>
    <dd>Prints the sheet object. Use PrintOut method from VB to avoid conflicts with the VB keyword Print<p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>PrintEx</h3>
<pre>Boolean <b>PrintEx</b>(String PrinterName, Boolean ShowPrinterDlg)</pre>
<dl>
    <dd>Prints the sheet object to a named printer. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>PrinterName</code></b> (String) : Name of printer. If omitted default printer will be used</dd>
            <dd><b><code>ShowPrinterDlg</code></b> (Boolean) : True if Print dialog should be shown</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>Returns true if object is printable</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>7.00</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>PrintOut</h3>
<pre>Boolean <b>PrintOut</b>()</pre>
<dl>
    <dd>Prints the sheet object. Same as Print method but to be used from VB where the Print keyword may otherwise cause
        problems<p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>5.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>RemoveField</h3>
<pre>Integer <b>RemoveField</b>(Integer index)</pre>
<dl>
    <dd>Removes a specified variable column from the table box. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>index</code></b> (Integer) : Column number (0 based) to be removed</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>Returns the number of columns remaining in table box after removal or -1 if remove failed</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>5.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>rem&nbsp;**&nbsp;delete&nbsp;second&nbsp;column&nbsp;from&nbsp;table&nbsp;box&nbsp;TB01&nbsp;**<br/>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.GetSheetObject("TB01")<br/>tb.RemoveField&nbsp;1<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>ResetInputFieldValues</h3>
<pre> <b>ResetInputFieldValues</b>(short ResetMode, Integer Col, Integer Row)</pre>
<dl>
    <dd>Resets input field values. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>ResetMode</code></b> (short) : Reset mode<br/>0 = Reset all values<br/>1 = Reset posible values<br/>2
                = Reset single value
            </dd>
            <dd><b><code>Col</code></b> (Integer) : Column index (0 based)</dd>
            <dd><b><code>Row</code></b> (Integer) : Array of row indices</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>8.00</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;obj&nbsp;=&nbsp;ActiveDocument.GetSheetObject("TB01")<br/>obj.ResetInputFieldValues&nbsp;2,1,0&nbsp;&nbsp;&nbsp;'reset&nbsp;first&nbsp;value&nbsp;in&nbsp;2nd&nbsp;column<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>Restore</h3>
<pre> <b>Restore</b>()</pre>
<dl>
    <dd>Restores the minimized sheet object if minimized. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SendToExcel</h3>
<pre>Integer <b>SendToExcel</b>()</pre>
<dl>
    <dd>Exports table data to Excel. <p/></dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>5.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>ServerSideExport</h3>
<pre> <b>ServerSideExport</b>(String Path, String Separator, Integer CodePage, Boolean Append)</pre>
<dl>
    <dd>Exports object table data to a file in a directory on QlikView Web Server. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Path</code></b> (String) : File name with path</dd>
            <dd><b><code>Separator</code></b> (String) : Separator to be used between values in record</dd>
            <dd><b><code>CodePage</code></b> (Integer) : Codepage number, e.g. :<br/>0 = current ANSI<br/>1200 = Unicode<br/>65001
                = UTF-8
            </dd>
            <dd><b><code>Append</code></b> (Boolean) : True if export to be appended to existing file</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>5.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.GetSheetObject("TB01")<br/>tb.ServerSideExport&nbsp;"C:\test.skv"&nbsp;,&nbsp;";"&nbsp;,&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'ANSI<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>ServerSideExportEx</h3>
<pre> <b>ServerSideExportEx</b>(String Path, String Separator, Integer Mode, Integer CodePage, Boolean Append)</pre>
<dl>
    <dd>Exports object table data to file in QlikView Server. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Path</code></b> (String) : File name with path</dd>
            <dd><b><code>Separator</code></b> (String) : Separator to be used between values in record</dd>
            <dd><b><code>Mode</code></b> (Integer) : 0=HTML<br/>1=Text<br/>2=Bitmap<br/>3=XML<br/>4=QVD<br/>5=BIFF</dd>
            <dd><b><code>CodePage</code></b> (Integer) : Codepage number, e.g. :<br/>0 = current ANSI<br/>1200 = Unicode<br/>65001
                = UTF-8
            </dd>
            <dd><b><code>Append</code></b> (Boolean) : True if export to be appended to existing file</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd></dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>9.00</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.GetSheetObject("TB01")<br/>tb.ServerSideExportEx&nbsp;"C:\test.xml"&nbsp;,&nbsp;";"&nbsp;,&nbsp;3&nbsp;'0=HTML,&nbsp;1=Text,&nbsp;2=Bitmap,&nbsp;3=XML,&nbsp;4=QVD,&nbsp;5=BIFF</code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SetBorder</h3>
<pre> <b>SetBorder</b>(IFrame Frame)</pre>
<dl>
    <dd>Sets border settings for the sheet object. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Frame</code></b> (<a href="IFrame.htm">IFrame</a>) : Frame (border) object</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SetCalculationLimits</h3>
<pre> <b>SetCalculationLimits</b>(ICalculationLimits CalculationLimits)</pre>
<dl>
    <dd>Sets information about the object's calculation memory limits. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>CalculationLimits</code></b> (ICalculationLimits) : Calculated object memory limits object</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>rem&nbsp;**&nbsp;create&nbsp;table&nbsp;box&nbsp;and&nbsp;double&nbsp;memory&nbsp;limit&nbsp;**<br/>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.Sheets("Main").CreateTableBox<br/>tb.AddField&nbsp;"Class"<br/>tb.AddField&nbsp;"Member"<br/>set&nbsp;cl&nbsp;=&nbsp;tb.GetCalculationLimits<br/>cl.MemoryLimit&nbsp;=&nbsp;cl.MemoryLimit&nbsp;*&nbsp;2<br/>tb.SetCalculationLimits&nbsp;cl<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SetFont</h3>
<pre> <b>SetFont</b>(IBaseFont Font)</pre>
<dl>
    <dd>Sets font for the sheet object. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Font</code></b> (<a href="IBaseFont.htm">IBaseFont</a>) : Font object</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SetFrame</h3>
<pre> <b>SetFrame</b>(IFrame Frame, Boolean RectsAlso, Variant (Array of short) Parts)</pre>
<dl>
    <dd>Sets frame, border and caption settings for the sheet object. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Frame</code></b> (<a href="IFrame.htm">IFrame</a>) : Sheet object frame</dd>
            <dd><b><code>RectsAlso</code></b> (Boolean) : True if position/size rectangles to be included</dd>
            <dd><b><code>Parts</code></b> (Variant (Array of short)) : Parts of frame to be set.<br/>Should either be
                empty (all parts set) <br/>or contain an array containing one element for<br/>each part of the frame to
                be set. The element <br/>should contain one of the numbers below:<br/>0 BORDER_CHANGE, <br/>1
                CAPTION_ON_OFF,<br/>2 LAYER_CHANGE, <br/>3 ALLOWMINIM_CHANGE,<br/>4 ALLOWMAXIM_CHANGE, <br/>5
                ALLOWINFO_CHANGE, <br/>6 AUTOMIN_CHANGE,<br/>7 ALLOWMOVESIZE_CHANGE, <br/>8 CONDSHOW_CHANGE, <br/>9
                FONT_CHANGE, <br/>10 ADVANCEDCAPTION_CHANGE,<br/>11 MACRO_TRIGGER_CHANGE, <br/>The order of the elements
                is arbitrary.
            </dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SetFrameDef</h3>
<pre> <b>SetFrameDef</b>(IFrame Frame)</pre>
<dl>
    <dd>Sets sheet object frame with position/size rectangle in docunits. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Frame</code></b> (<a href="IFrame.htm">IFrame</a>) : Sheet object frame with position/size
                rectangle in docunits
            </dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>7.00</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SetInputFieldCell</h3>
<pre> <b>SetInputFieldCell</b>(Integer Row, Integer Col, String Value)</pre>
<dl>
    <dd>Sets input field cell value. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Row</code></b> (Integer) : Row index (0 based)</dd>
            <dd><b><code>Col</code></b> (Integer) : Column index (0 based)</dd>
            <dd><b><code>Value</code></b> (String) : New value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>8.00</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;obj&nbsp;=&nbsp;ActiveDocument.GetSheetObject("TB01")<br/>obj.SetInputFieldCell&nbsp;1,1,"999"&nbsp;&nbsp;&nbsp;'set&nbsp;2nd&nbsp;row&nbsp;value&nbsp;in&nbsp;2nd&nbsp;column&nbsp;to&nbsp;999<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SetLayer</h3>
<pre> <b>SetLayer</b>(Integer Level)</pre>
<dl>
    <dd>Sets layer for the sheet object. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Level</code></b> (Integer) : -1 is Bottom, 0 is Normal, 1 is Top ; -127 to 127 accepted</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SetPixWidths</h3>
<pre> <b>SetPixWidths</b>(Integer ColOffset, Variant (Array of Integer) PixWidths)</pre>
<dl>
    <dd>Sets the pixel width of a specified column. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>ColOffset</code></b> (Integer) : First column number (0 based) to be formatted</dd>
            <dd><b><code>PixWidths</code></b> (Variant (Array of Integer)) : Width in pixels for each column</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>dim&nbsp;w(3)<br/>w(1)=100<br/>w(2)=150<br/>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.Sheets("Main").CreateTableBox<br/>tb.AddField&nbsp;"Class"<br/>tb.AddField&nbsp;"Member"<br/>tb.AddField&nbsp;"MemberComment"<br/>tb.SetPixWidths&nbsp;0,w<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SetPrintOptions</h3>
<pre> <b>SetPrintOptions</b>(IPrinterOptions Opt)</pre>
<dl>
    <dd>Sets printer settings for the sheet object. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Opt</code></b> (<a href="IPrinterOptions.htm">IPrinterOptions</a>) : Printer settings object
            </dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>6.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SetProperties</h3>
<pre> <b>SetProperties</b>(ITableBoxProperties Properties)</pre>
<dl>
    <dd>Sets the table box properties. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Properties</code></b> (<a href="ITableBoxProperties.htm">ITableBoxProperties</a>) : Table box
                properties object
            </dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>rem&nbsp;**&nbsp;create&nbsp;table&nbsp;box&nbsp;and&nbsp;name&nbsp;MyTable&nbsp;**<br/>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.Sheets("Main").CreateTableBox<br/>tb.AddField&nbsp;"Class"<br/>tb.AddField&nbsp;"Member"<br/>set&nbsp;tp&nbsp;=&nbsp;tb.GetProperties<br/>tp.Layout.Frame.Name.v&nbsp;=&nbsp;"MyTable"<br/>tb.SetProperties&nbsp;tp<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SetRect</h3>
<pre> <b>SetRect</b>(IRect WinRect)</pre>
<dl>
    <dd>Sets the position rectangle for the sheet object. Rectangle must be in pixels. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>WinRect</code></b> (<a href="IRect.htm">IRect</a>) : Position rectangle object</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>SortBy</h3>
<pre> <b>SortBy</b>(Integer Col)</pre>
<dl>
    <dd>Moves a specified column to the top of the sort priority list. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>Col</code></b> (Integer) : Column number (0 based)</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>4.0x</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Example:</b></dt>
            <dd><i><code>set&nbsp;tb&nbsp;=&nbsp;ActiveDocument.Sheets("Main").CreateTableBox<br/>tb.AddField&nbsp;"Class"<br/>tb.AddField&nbsp;"Member"<br/>tb.SortBy&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;sort&nbsp;by&nbsp;Member<br/></code></i>
            </dd>
        </dl>
    </dd>
</dl>
<hr>
<h3>WriteXmlPropertiesFile</h3>
<pre> <b>WriteXmlPropertiesFile</b>(String FileName)</pre>
<dl>
    <dd>Writes an xml file with properties describing the sheet object. <p/></dd>
    <dd>
        <dl>
            <dt><b>Parameters:</b></dt>
            <dd><b><code>FileName</code></b> (String) : File name with path</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Returns:</b></dt>
            <dd>No return value</dd>
        </dl>
    </dd>
    <br/>
    <dd>
        <dl>
            <dt><b>Earliest version:</b></dt>
            <dd>7.00</dd>
        </dl>
    </dd>
</dl>
<hr>
</body>
</html>
